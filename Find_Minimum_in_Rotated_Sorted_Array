// TC:O(nlogn)
// SC:O(1)
class Solution {
public:
    int findMin(vector<int>& arr) {
        sort(arr.begin(),arr.end());
        return arr[0];
    }
};

// TC:O(n)
// SC:O(1)
class Solution {
public:
    int findMin(vector<int>& arr) {
        int minEle = INT_MAX;
        for(int i=0;i<arr.size();i++){
            if(arr[i]<minEle){
                minEle = arr[i];
            }
        }
        return minEle;
    }
};



// TC:O(logn)
// SC:O(1)
class Solution {
public:
    int findMin(vector<int>& arr) {
        int low=0;
        int high=arr.size()-1;
        int ans=INT_MAX;
        while(low<=high){
            int mid=(low+high)/2;
            if(arr[low]<=arr[high]){
                ans=min(ans,arr[low]);
            }
            if(arr[low]<=arr[mid]){
                ans=min(ans,arr[low]);
                low=mid+1;

            }
            else{
                ans=min(arr[mid],ans);
                high=mid-1;
            }
        }
        
        return ans;
    
    }
};

